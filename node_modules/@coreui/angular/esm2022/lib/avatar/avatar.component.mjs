import { Component, computed, HostBinding, input } from '@angular/core';
import { NgClass, NgOptimizedImage } from '@angular/common';
import { TextColorDirective } from '../utilities';
import * as i0 from "@angular/core";
import * as i1 from "../utilities/text-color.directive";
export class AvatarComponent {
    constructor() {
        /**
         * Sets the background color context of the component to one of CoreUI’s themed colors.
         * @type Colors
         */
        this.color = input();
        /**
         * Select the shape of the component.
         * @type Shapes
         */
        this.shape = input();
        /**
         * Size the component small, large, or extra large.
         * @default 'md'
         */
        this.size = input('md');
        /**
         * The alt attribute for the img element alternate text.
         * @type string
         */
        this.alt = input('');
        /**
         * The src attribute for the img element.
         * @type string
         */
        this.src = input();
        /**
         * Sets the color context of the status indicator to one of CoreUI’s themed colors.
         * @type Colors
         */
        this.status = input();
        /**
         * Sets the text color of the component to one of CoreUI’s themed colors.
         * via TextColorDirective
         * @type TextColors
         */
        this.textColor = input();
        this.statusClass = computed(() => {
            return {
                'avatar-status': true,
                [`bg-${this.status()}`]: !!this.status()
            };
        });
    }
    get hostClasses() {
        return {
            avatar: true,
            [`avatar-${this.size()}`]: !!this.size(),
            [`bg-${this.color()}`]: !!this.color(),
            [`${this.shape()}`]: !!this.shape()
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: AvatarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.1.0", type: AvatarComponent, isStandalone: true, selector: "c-avatar", inputs: { color: { classPropertyName: "color", publicName: "color", isSignal: true, isRequired: false, transformFunction: null }, shape: { classPropertyName: "shape", publicName: "shape", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "size", isSignal: true, isRequired: false, transformFunction: null }, alt: { classPropertyName: "alt", publicName: "alt", isSignal: true, isRequired: false, transformFunction: null }, src: { classPropertyName: "src", publicName: "src", isSignal: true, isRequired: false, transformFunction: null }, status: { classPropertyName: "status", publicName: "status", isSignal: true, isRequired: false, transformFunction: null }, textColor: { classPropertyName: "textColor", publicName: "textColor", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "this.hostClasses" }, classAttribute: "avatar" }, hostDirectives: [{ directive: i1.TextColorDirective, inputs: ["cTextColor", "textColor"] }], ngImport: i0, template: "<ng-content>\n  @if (src()) {\n    <img [ngSrc]=\"src() ?? ''\" fill class=\"avatar-img\" alt=\"{{alt()}}\" />\n  }\n</ng-content>\n@if (!!status()) {\n  <span [ngClass]=\"statusClass()\"></span>\n}\n\n", dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgOptimizedImage, selector: "img[ngSrc]", inputs: ["ngSrc", "ngSrcset", "sizes", "width", "height", "loading", "priority", "loaderParams", "disableOptimizedSrcset", "fill", "placeholder", "placeholderConfig", "src", "srcset"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.0", ngImport: i0, type: AvatarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c-avatar', standalone: true, imports: [NgClass, NgOptimizedImage], hostDirectives: [
                        {
                            directive: TextColorDirective,
                            inputs: ['cTextColor: textColor']
                        }
                    ], host: { class: 'avatar' }, template: "<ng-content>\n  @if (src()) {\n    <img [ngSrc]=\"src() ?? ''\" fill class=\"avatar-img\" alt=\"{{alt()}}\" />\n  }\n</ng-content>\n@if (!!status()) {\n  <span [ngClass]=\"statusClass()\"></span>\n}\n\n" }]
        }], propDecorators: { hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvYXZhdGFyL2F2YXRhci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2F2YXRhci9hdmF0YXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHNUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sY0FBYyxDQUFDOzs7QUFlbEQsTUFBTSxPQUFPLGVBQWU7SUFiNUI7UUFjRTs7O1dBR0c7UUFDTSxVQUFLLEdBQW9DLEtBQUssRUFBRSxDQUFDO1FBRTFEOzs7V0FHRztRQUNNLFVBQUssR0FBb0MsS0FBSyxFQUFFLENBQUM7UUFFMUQ7OztXQUdHO1FBQ00sU0FBSSxHQUFvQyxLQUFLLENBQXFCLElBQUksQ0FBQyxDQUFDO1FBRWpGOzs7V0FHRztRQUNNLFFBQUcsR0FBd0IsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTlDOzs7V0FHRztRQUNNLFFBQUcsR0FBb0MsS0FBSyxFQUFFLENBQUM7UUFFeEQ7OztXQUdHO1FBQ00sV0FBTSxHQUFvQyxLQUFLLEVBQUUsQ0FBQztRQUUzRDs7OztXQUlHO1FBQ00sY0FBUyxHQUF3QyxLQUFLLEVBQUUsQ0FBQztRQUV6RCxnQkFBVyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUU7WUFDbkMsT0FBTztnQkFDTCxlQUFlLEVBQUUsSUFBSTtnQkFDckIsQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7YUFDekMsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0tBV0o7SUFUQyxJQUNJLFdBQVc7UUFDYixPQUFPO1lBQ0wsTUFBTSxFQUFFLElBQUk7WUFDWixDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUN4QyxDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUN0QyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtTQUNwQyxDQUFDO0lBQ0osQ0FBQzs4R0EzRFUsZUFBZTtrR0FBZixlQUFlLHNrQ0NuQjVCLDRNQVNBLDRDRENZLE9BQU8sb0ZBQUUsZ0JBQWdCOzsyRkFTeEIsZUFBZTtrQkFiM0IsU0FBUzsrQkFDRSxVQUFVLGNBRVIsSUFBSSxXQUNQLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLGtCQUNwQjt3QkFDZDs0QkFDRSxTQUFTLEVBQUUsa0JBQWtCOzRCQUM3QixNQUFNLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQzt5QkFDbEM7cUJBQ0YsUUFDSyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUU7OEJBc0RyQixXQUFXO3NCQURkLFdBQVc7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgY29tcHV0ZWQsIEhvc3RCaW5kaW5nLCBpbnB1dCwgSW5wdXRTaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ2xhc3MsIE5nT3B0aW1pemVkSW1hZ2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBDb2xvcnMsIFNoYXBlcywgU2l6ZXMsIFRleHRDb2xvcnMgfSBmcm9tICcuLi9jb3JldWkudHlwZXMnO1xuaW1wb3J0IHsgVGV4dENvbG9yRGlyZWN0aXZlIH0gZnJvbSAnLi4vdXRpbGl0aWVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYy1hdmF0YXInLFxuICB0ZW1wbGF0ZVVybDogJy4vYXZhdGFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nQ2xhc3MsIE5nT3B0aW1pemVkSW1hZ2VdLFxuICBob3N0RGlyZWN0aXZlczogW1xuICAgIHtcbiAgICAgIGRpcmVjdGl2ZTogVGV4dENvbG9yRGlyZWN0aXZlLFxuICAgICAgaW5wdXRzOiBbJ2NUZXh0Q29sb3I6IHRleHRDb2xvciddXG4gICAgfVxuICBdLFxuICBob3N0OiB7IGNsYXNzOiAnYXZhdGFyJyB9XG59KVxuZXhwb3J0IGNsYXNzIEF2YXRhckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBTZXRzIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGNvbnRleHQgb2YgdGhlIGNvbXBvbmVudCB0byBvbmUgb2YgQ29yZVVJ4oCZcyB0aGVtZWQgY29sb3JzLlxuICAgKiBAdHlwZSBDb2xvcnNcbiAgICovXG4gIHJlYWRvbmx5IGNvbG9yOiBJbnB1dFNpZ25hbDxDb2xvcnMgfCB1bmRlZmluZWQ+ID0gaW5wdXQoKTtcblxuICAvKipcbiAgICogU2VsZWN0IHRoZSBzaGFwZSBvZiB0aGUgY29tcG9uZW50LlxuICAgKiBAdHlwZSBTaGFwZXNcbiAgICovXG4gIHJlYWRvbmx5IHNoYXBlOiBJbnB1dFNpZ25hbDxTaGFwZXMgfCB1bmRlZmluZWQ+ID0gaW5wdXQoKTtcblxuICAvKipcbiAgICogU2l6ZSB0aGUgY29tcG9uZW50IHNtYWxsLCBsYXJnZSwgb3IgZXh0cmEgbGFyZ2UuXG4gICAqIEBkZWZhdWx0ICdtZCdcbiAgICovXG4gIHJlYWRvbmx5IHNpemU6IElucHV0U2lnbmFsPE9taXQ8U2l6ZXMsICd4eGwnPj4gPSBpbnB1dDxPbWl0PFNpemVzLCAneHhsJz4+KCdtZCcpO1xuXG4gIC8qKlxuICAgKiBUaGUgYWx0IGF0dHJpYnV0ZSBmb3IgdGhlIGltZyBlbGVtZW50IGFsdGVybmF0ZSB0ZXh0LlxuICAgKiBAdHlwZSBzdHJpbmdcbiAgICovXG4gIHJlYWRvbmx5IGFsdDogSW5wdXRTaWduYWw8c3RyaW5nPiA9IGlucHV0KCcnKTtcblxuICAvKipcbiAgICogVGhlIHNyYyBhdHRyaWJ1dGUgZm9yIHRoZSBpbWcgZWxlbWVudC5cbiAgICogQHR5cGUgc3RyaW5nXG4gICAqL1xuICByZWFkb25seSBzcmM6IElucHV0U2lnbmFsPHN0cmluZyB8IHVuZGVmaW5lZD4gPSBpbnB1dCgpO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBjb2xvciBjb250ZXh0IG9mIHRoZSBzdGF0dXMgaW5kaWNhdG9yIHRvIG9uZSBvZiBDb3JlVUnigJlzIHRoZW1lZCBjb2xvcnMuXG4gICAqIEB0eXBlIENvbG9yc1xuICAgKi9cbiAgcmVhZG9ubHkgc3RhdHVzOiBJbnB1dFNpZ25hbDxDb2xvcnMgfCB1bmRlZmluZWQ+ID0gaW5wdXQoKTtcblxuICAvKipcbiAgICogU2V0cyB0aGUgdGV4dCBjb2xvciBvZiB0aGUgY29tcG9uZW50IHRvIG9uZSBvZiBDb3JlVUnigJlzIHRoZW1lZCBjb2xvcnMuXG4gICAqIHZpYSBUZXh0Q29sb3JEaXJlY3RpdmVcbiAgICogQHR5cGUgVGV4dENvbG9yc1xuICAgKi9cbiAgcmVhZG9ubHkgdGV4dENvbG9yOiBJbnB1dFNpZ25hbDxUZXh0Q29sb3JzIHwgdW5kZWZpbmVkPiA9IGlucHV0KCk7XG5cbiAgcmVhZG9ubHkgc3RhdHVzQ2xhc3MgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICdhdmF0YXItc3RhdHVzJzogdHJ1ZSxcbiAgICAgIFtgYmctJHt0aGlzLnN0YXR1cygpfWBdOiAhIXRoaXMuc3RhdHVzKClcbiAgICB9O1xuICB9KTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgZ2V0IGhvc3RDbGFzc2VzKCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGF2YXRhcjogdHJ1ZSxcbiAgICAgIFtgYXZhdGFyLSR7dGhpcy5zaXplKCl9YF06ICEhdGhpcy5zaXplKCksXG4gICAgICBbYGJnLSR7dGhpcy5jb2xvcigpfWBdOiAhIXRoaXMuY29sb3IoKSxcbiAgICAgIFtgJHt0aGlzLnNoYXBlKCl9YF06ICEhdGhpcy5zaGFwZSgpXG4gICAgfTtcbiAgfVxufVxuIiwiPG5nLWNvbnRlbnQ+XG4gIEBpZiAoc3JjKCkpIHtcbiAgICA8aW1nIFtuZ1NyY109XCJzcmMoKSA/PyAnJ1wiIGZpbGwgY2xhc3M9XCJhdmF0YXItaW1nXCIgYWx0PVwie3thbHQoKX19XCIgLz5cbiAgfVxuPC9uZy1jb250ZW50PlxuQGlmICghIXN0YXR1cygpKSB7XG4gIDxzcGFuIFtuZ0NsYXNzXT1cInN0YXR1c0NsYXNzKClcIj48L3NwYW4+XG59XG5cbiJdfQ==